<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<sbe:messageSchema xmlns:sbe="http://fixprotocol.io/2016/sbe"
                   package="io.aeron.cluster.codecs"
                   id="1"
                   version="0"
                   semanticVersion="5.2"
                   description="Message Codecs for communicating with, and within, an Aeron Cluster"
                   byteOrder="littleEndian">
    <types>
        <composite name="messageHeader" description="Message identifiers and length of message root">
            <type name="blockLength" primitiveType="uint16"/>
            <type name="templateId"  primitiveType="uint16"/>
            <type name="schemaId"    primitiveType="uint16"/>
            <type name="version"     primitiveType="uint16"/>
        </composite>
        <composite name="groupSizeEncoding" description="Repeating group dimensions">
            <type name="blockLength" primitiveType="uint16"/>
            <type name="numInGroup"  primitiveType="uint16"/>
        </composite>
        <composite name="varAsciiEncoding">
            <type name="length"      primitiveType="uint32" maxValue="1073741824"/>
            <type name="varData"     primitiveType="uint8" length="0" characterEncoding="US-ASCII"/>
        </composite>
        <composite name="varDataEncoding">
            <type name="length"      primitiveType="uint32" maxValue="1073741824"/>
            <type name="varData"     primitiveType="uint8" length="0"/>
        </composite>
        <enum name="EventCode" encodingType="int32" description="Type of event for a response">
            <validValue name="OK">0</validValue>
            <validValue name="ERROR">1</validValue>
            <validValue name="REDIRECT">2</validValue>
            <validValue name="AUTHENTICATION_REJECTED">3</validValue>
        </enum>
        <enum name="CloseReason" encodingType="int32" description="Reason why a session was closed">
            <validValue name="USER_ACTION">0</validValue>
            <validValue name="TIMEOUT">1</validValue>
        </enum>
        <enum name="ClusterAction" encodingType="int32" description="Action to be taken by a cluster nodes">
            <validValue name="INIT">0</validValue>
            <validValue name="SNAPSHOT">1</validValue>
            <validValue name="SUSPEND">2</validValue>
            <validValue name="RESUME">3</validValue>
            <validValue name="SHUTDOWN">4</validValue>
            <validValue name="ABORT">5</validValue>
        </enum>
        <enum name="SnapshotMark" encodingType="int32" description="Mark within a snapshot">
            <validValue name="BEGIN">0</validValue>
            <validValue name="SECTION">1</validValue>
            <validValue name="END">2</validValue>
        </enum>
        <type name="time_t" primitiveType="int64" description="Epoch time in milliseconds since 1 Jan 1970 UTC"/>
    </types>

    <!--
        Cluster Session Protocol
        ========================

        Protocol is:
            -> session-connect, [*session-message | *session-keep-alive], session-close
                      \
            <-          *session-event, [*session-message | *session-event | *new-leader-event]

        1. Session Connect
          - An attempt is made to establish a connection with the cluster via multicast or multi-destination-cast.
          - If successful, a OK session-event will be sent in the return path with the list of endpoint destinations
            for the cluster members. The leader will come first.
          - Followers can respond with a REDIRECT code and a list of member endpoint destinations in the
            detail that will have the leader first.
          - If a change of leader occurs mid session then a new-leader-event will be sent from the new leader.

        2. Session Message - Service messages which make up application protocol.
          - Messages are sent to a clustered service with a SessionHeader followed by application protocol payload.
          - The service will emit responses and events with a SessionHeader followed by application protocol payload.
          - The application protocol is the user defined messages for interacting with the service being clustered.
          - Keep alive messages should be sent when insufficient session messages are sent to keep the session open.

        3. Session Close
          - A cluster session can be closed with a CloseSessionRequest
          - If the session is not explicitly closed then it will timeout if the connection becomes unavailable.

        Cluster Authentication Protocol
        ===============================

        Connect protocol can occur in multiple valid sequences

        1. Authenticated via Session Connect
            -> session-connect, ...
                      \
            <-          *session-event (OK), ...

        2. Authenticated via Challenge Response
            -> session-connect,   challenge-response, ...
                      \            /              \
            <-          challenge,                  session-event (OK), ...

        3. Rejected via Session Connect
            -> session-connect
                      \
            <-          *session-event (AUTHENTICATION_REJECTED)

        4. Rejected via Challenge Response
            -> session-connect,   challenge-response
                      \            /              \
            <-          challenge,                  session-event (AUTHENTICATION_REJECTED)

    -->

    <sbe:message name="SessionEvent"
                 id="1"
                 description="Generic event response to a connect request or async event. Details will be empty if code is OK">
        <field name="clusterSessionId"     id="1" type="int64"
               description="Session id for a multiplexed session over a shared connection, i.e. same Image"/>
        <field name="correlationId"        id="2" type="int64"
               description="Request correlation id with which this event is associated"/>
        <field name="code"                 id="3" type="EventCode"
               description="code type of the response"/>
        <data  name="detail"               id="4" type="varAsciiEncoding"
               description="Further detail such as an error message as necessary"/>
    </sbe:message>

    <sbe:message name="SessionConnectRequest"
                 id="2"
                 description="Connect to the cluster and if successful then open a session">
        <field name="correlationId"        id="1" type="int64"/>
        <field name="clusterSessionId"     id="2" type="int64"/>
        <field name="responseStreamId"     id="3" type="int32"/>
        <data  name="responseChannel"      id="4" type="varAsciiEncoding"/>
        <data  name="credentialData"       id="5" type="varDataEncoding"/>
    </sbe:message>

    <sbe:message name="SessionHeader"
                 id="3"
                 description="Header for request and response messages within a communication session with the clustered service">
        <field name="correlationId"        id="1" type="int64"/>
        <field name="clusterSessionId"     id="2" type="int64"/>
        <field name="timestamp"            id="3" type="time_t"/>
    </sbe:message>

    <sbe:message name="SessionCloseRequest"
                 id="4"
                 description="Close an open cluster session">
        <field name="clusterSessionId"     id="1" type="int64"/>
    </sbe:message>

    <sbe:message name="SessionKeepAliveRequest"
                 id="5"
                 description="Keep a cluster session open by indicating the client is alive">
        <field name="correlationId"        id="1" type="int64"/>
        <field name="clusterSessionId"     id="2" type="int64"/>
    </sbe:message>

    <sbe:message name="NewLeaderEvent"
                 id="6"
                 description="Event to indicate a new leader has been elected for the cluster">
        <field name="clusterSessionId"     id="1" type="int64"/>
        <field name="lastCorrelationId"    id="2" type="int64"/>
        <field name="lastMessageTimestamp" id="3" type="time_t"/>
        <field name="leadershipTimestamp"  id="4" type="time_t"/>
        <field name="leadershipTermId"     id="5" type="int64"/>
        <field name="leaderMemberId"       id="6" type="int32"/>
        <data  name="memberEndpoints"      id="7" type="varAsciiEncoding"/>
    </sbe:message>

    <sbe:message name="Challenge"
                 id="7"
                 description="Challenge the client to provide additional credentials">
        <field name="correlationId"        id="1" type="int64"/>
        <field name="clusterSessionId"     id="2" type="int64"/>
        <data  name="challengeData"        id="3" type="varDataEncoding"/>
    </sbe:message>

    <sbe:message name="ChallengeResponse"
                 id="8"
                 description="Respond to a cluster challenge with additional credentials">
        <field name="correlationId"        id="1" type="int64"/>
        <field name="clusterSessionId"     id="2" type="int64"/>
        <data  name="credentialData"       id="3" type="varDataEncoding"/>
    </sbe:message>

    <!-- Events from the Consensus Module to the clustered services which get appended to the log  -->

    <sbe:message name="TimerEvent"
                 id="20"
                 description="Timer triggered event as the result of a deadline passing on a registered timer">
        <field name="correlationId"        id="1" type="int64"/>
        <field name="timestamp"            id="2" type="time_t"/>
    </sbe:message>

    <sbe:message name="SessionOpenEvent"
                 id="21"
                 description="Event for the state machine to notify a session has been opened">
        <field name="correlationId"        id="1" type="int64"/>
        <field name="clusterSessionId"     id="2" type="int64"/>
        <field name="timestamp"            id="3" type="time_t"/>
        <field name="responseStreamId"     id="4" type="int32"/>
        <data  name="responseChannel"      id="5" type="varAsciiEncoding"/>
        <data  name="principalData"        id="6" type="varDataEncoding"/>
    </sbe:message>

    <sbe:message name="SessionCloseEvent"
                 id="22"
                 description="Event for the state machine to notify a session has been closed">
        <field name="correlationId"        id="1" type="int64"/>
        <field name="clusterSessionId"     id="2" type="int64"/>
        <field name="timestamp"            id="3" type="time_t"/>
        <field name="closeReason"          id="4" type="CloseReason"/>
    </sbe:message>

    <sbe:message name="ClusterActionRequest"
                 id="23"
                 description="Request an action to be taken by the service">
        <field name="logPosition"          id="1" type="int64"/>
        <field name="leadershipTermId"     id="2" type="int64"/>
        <field name="timestamp"            id="3" type="time_t"/>
        <field name="action"               id="4" type="ClusterAction"/>
    </sbe:message>


    <!-- Messages from a clustered service to the Consensus Module -->

    <sbe:message name="ScheduleTimerRequest"
                 id="30"
                 description="Schedule a timer event to or reschedule for an unexpired correlation id">
        <field name="serviceId"            id="1" type="int64"/>
        <field name="correlationId"        id="2" type="int64"/>
        <field name="timestamp"            id="3" type="time_t"/>
        <field name="deadline"             id="4" type="time_t"/>
    </sbe:message>

    <sbe:message name="CancelTimerRequest"
                 id="31"
                 description="Cancel a scheduled timer event">
        <field name="serviceId"            id="1" type="int64"/>
        <field name="correlationId"        id="2" type="int64"/>
        <field name="timestamp"            id="3" type="time_t"/>
    </sbe:message>

    <sbe:message name="ServiceActionAck"
                 id="32"
                 description="Acknowledge the cluster action request">
        <field name="serviceId"            id="1" type="int64"/>
        <field name="logPosition"          id="2" type="int64"/>
        <field name="leadershipTermId"     id="3" type="int64"/>
        <field name="timestamp"            id="4" type="time_t"/>
        <field name="action"               id="5" type="ClusterAction"/>
    </sbe:message>

    <!--
        Cluster Consensus Protocol
        ==========================

        The leader replicates a log stream to all followers for its term as leader. Leadership term ids are monotonic.

        The followers persist the replicated log locally and sends updates to the leader with the highest position they
        have persisted in the current term. Each term has a position starting at zero with the total log position
        reached being an accumulation of the term positions across all leadership terms. Each leadership term starts
        with base log position for the accumulated term positions.

        The leader gathers the positions reached by the followers, plus its own locally persisted log, and publishes
        the highest position for a quorum of the member nodes including itself which can be committed to the state
        machines. If the quorum position does not progress within a timeout then the latest position will be
        re-transmitted as a heartbeat from the leader.

        Messages are only valid within the context of a leadership term and all updates are applied as monotonically
        increasing state.
    -->

    <sbe:message name="AppliedPosition"
                 id="50"
                 description="The highest position a member has applied to their state machine">
        <field name="termPosition"         id="1" type="int64"/>
        <field name="leadershipTermId"     id="2" type="int64"/>
        <field name="memberId"             id="3" type="int32"/>
    </sbe:message>

    <sbe:message name="AppendedPosition"
                 id="51"
                 description="The highest position a follower has appended to their local log">
        <field name="termPosition"         id="1" type="int64"/>
        <field name="leadershipTermId"     id="2" type="int64"/>
        <field name="memberId"             id="3" type="int32"/>
    </sbe:message>

    <sbe:message name="CommitPosition"
                 id="52"
                 description="The highest position reached by quorum of the cluster as determined by the leader">
        <field name="termPosition"         id="1" type="int64"/>
        <field name="leadershipTermId"     id="2" type="int64"/>
        <field name="leaderMemberId"       id="3" type="int32"/>
        <field name="logSessionId"         id="5" type="int32"/>
    </sbe:message>

    <!-- Snapshot serialisation -->

    <sbe:message name="SnapshotMarker"
                 id="100"
                 description="Mark the beginning of a snapshot">
        <field name="typeId"               id="1" type="int64"/>
        <field name="logPosition"          id="2" type="int64"/>
        <field name="leadershipTermId"     id="3" type="int64"/>
        <field name="index"                id="4" type="int32"/>
        <field name="mark"                 id="5" type="SnapshotMark"/>
    </sbe:message>

    <sbe:message name="ClientSession"
                 id="102"
                 description="A serialised client session in the context of a service">
        <field name="clusterSessionId"     id="1" type="int64"/>
        <field name="responseStreamId"     id="2" type="int32"/>
        <data  name="responseChannel"      id="3" type="varAsciiEncoding"/>
        <data  name="principalData"        id="4" type="varDataEncoding"/>
    </sbe:message>

    <sbe:message name="ClusterSession"
                 id="103"
                 description="A serialised client session in the context of a sequencer">
        <field name="clusterSessionId"     id="1" type="int64"/>
        <field name="openedTermPosition"   id="2" type="int64"/>
        <field name="lastCorrelationId"    id="3" type="int64"/>
        <field name="timeOfLastActivity"   id="4" type="time_t"/>
        <field name="responseStreamId"     id="5" type="int32"/>
        <data  name="responseChannel"      id="6" type="varAsciiEncoding"/>
    </sbe:message>

    <sbe:message name="Timer"
                 id="104"
                 description="A serialised scheduled timer">
        <field name="correlationId"        id="1" type="int64"/>
        <field name="deadline"             id="2" type="time_t"/>
    </sbe:message>

</sbe:messageSchema>
